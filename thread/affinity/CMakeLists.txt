PROJECT(test_affinity)
SET(TEST_AFFINITY "test_affinity")
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
MESSAGE(STATUS "test CMakeList.txt -----------------------")

# compiler related
SET(NEON_FLAGS "-ffast-math -mfpu=neon -mcpu=cortex-a9 -mfloat-abi=hard")
SET(CMAKE_C_COMPILER "clang")
SET(CMAKE_C_FLAGS "-O2 -Wall -std=gnu99 -Wpointer-arith")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${NEON_FLAGS}")
SET(CMAKE_CXX_COMPILER "clang++")
SET(CMAKE_CXX_FLAGS "-O2 -Wall -std=c++11 -pthread -Wpointer-arith")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${NEON_FLAGS}")

ADD_DEFINITIONS("-DUSENEON")

# other public variables
SET(OPENCV_LIBS opencv_core opencv_highgui opencv_imgproc)
SET(PROJ_LIBS hineon pthread rt)

# include directories, headers and libs
INCLUDE_DIRECTORIES(
    ${CMAKE_SOURCE_DIR}/include
    ${CMAKE_SOURCE_DIR}/src
)
SET(TEST_LIB_PATH ${CMAKE_SOURCE_DIR}/lib)
LINK_DIRECTORIES(${TEST_LIB_PATH})

# mesages to display
MESSAGE(STATUS "PROJECT_NAME: ${PROJECT_NAME}")
MESSAGE(STATUS "CMAKE_SOURCE_DIR: ${CMAKE_SOURCE_DIR}")
MESSAGE(STATUS "CMAKE_BINARY_DIR: ${CMAKE_BINARY_DIR}")
MESSAGE(STATUS "CMAKE_C_COMPILER: ${CMAKE_C_COMPILER}")
MESSAGE(STATUS "CMAKE_C_FLAGS: ${CMAKE_C_FLAGS}")
MESSAGE(STATUS "CMAKE_CXX_COMPILER: ${CMAKE_CXX_COMPILER}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
MESSAGE(STATUS "TEST_LIB_PATH: ${TEST_LIB_PATH}")
MESSAGE(STATUS "OPENCV_LIBS: ${OPENCV_LIBS}")
MESSAGE(STATUS "PROJ_LIBS: ${PROJ_LIBS}")

# build all targets
AUX_SOURCE_DIRECTORY(src SRC_LIST)
MESSAGE(STATUS "SRC_LIST: ${SRC_LIST}")

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR})
MESSAGE(STATUS "EXECUTABLE_OUTPUT_PATH: ${CMAKE_SOURCE_DIR}")
ADD_EXECUTABLE(${TEST_AFFINITY} ${SRC_LIST})
TARGET_LINK_LIBRARIES(${TEST_AFFINITY} ${PROJ_LIBS} ${OPENCV_LIBS})

